Parse negative numbers with parentheses e.g., ($500) and (500) = -$500

Parse -$ as 0

Format the DollarsTextField when it loses focus
 - red negative with parentheses
 
A trailing 'd' or 'f' should be illegal in DollarsTextField

Who should handle formatting of Dollars? (Dollars or DollarsTextField?)

Handle text parsing in ApplicationFrame's startingBalanceField()--particularly exception handling 

Require class needs an "impossible exception" method (or "not implemented")

---
Need to handle case where starting balance is lower than cost basis--that should be illegal

Should StockMarketYear be immutable?

Make Dollars.equals compare to null without throwing exception -- tests are too hard to read currently

Test localization of currency

---
Add remaining fields so that starting conditions can be set at runtime

Check that keyboard shortcuts work (including tabbing between components)

When tabbing to DollarsTextField, should the value be selected?

Run Swing-related stuff on event dispatching thread: http://download.oracle.com/javase/6/docs/api/javax/swing/package-summary.html#threading

Error handling for exceptions within Swing components--how?

Tip for running Swing tests: http://blog.schauderhaft.de/2010/08/15/use-cases-for-junit-rules/ (via Esko Luontola)

---
Long term:

- Cross-platform testing & support (Consider "Macify")
  - Cmd-W should close window on Mac
- More realistic abstraction for capital gains tax (in StockMarketYear)



		
		field.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				forecastTable.setModel(new DefaultTableModel());
			}
		});
		
		field.addFocusListener(new FocusAdapter() {
			public void focusLost(FocusEvent e) {
				forecastTable.setModel(new DefaultTableModel());
			}
		});
